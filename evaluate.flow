# Project: adams
# Date: 2025-06-28 15:34:02
# User: fracpete
# Charset: UTF-8
# Modules: adams-annotator,adams-audio,adams-compress,adams-core,adams-djl,adams-docker,adams-event,adams-excel,adams-ffmpeg,adams-git,adams-groovy,adams-imaging,adams-imaging-boofcv,adams-imaging-djl,adams-imaging-ext,adams-jep,adams-json,adams-math,adams-meta,adams-ml,adams-net,adams-odf,adams-opencv,adams-pdf,adams-python,adams-random,adams-rats-core,adams-redis,adams-spreadsheet,adams-terminal,adams-video,adams-visualstats,adams-weka,adams-xml,adams-yaml
#
adams.flow.control.Flow -annotation "For analyzing hourly electricity usage.\\nSpreadsheet requires the following columns:\\n- date\\n- usage_kwh\\n- cost\\n- type\\n" -execute-on-error adams.flow.control.postflowexecution.Null -execute-on-finish adams.flow.control.postflowexecution.Null -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.TabView -display-type adams.flow.core.displaytype.Default
  adams.flow.sink.SpreadSheetDisplay -name Full -short-title true -display-type adams.flow.core.displaytype.Default -cell-rendering-customizer adams.gui.core.spreadsheettable.DefaultCellRenderingCustomizer -allow-search true -writer adams.data.io.output.NullWriter -preview adams.gui.core.spreadsheetpreview.NullPreview
  adams.flow.sink.SpreadSheetDisplay -name Peak/Off-peak -display-type adams.flow.core.displaytype.Default -cell-rendering-customizer adams.gui.core.spreadsheettable.DefaultCellRenderingCustomizer -writer adams.data.io.output.NullWriter -preview adams.gui.core.spreadsheetpreview.NullPreview
  adams.flow.sink.Display -name "# days" -display-type adams.flow.core.displaytype.Default -writer adams.data.io.output.NullWriter
  adams.flow.sink.SpreadSheetDisplay -name "free weekend" -display-type adams.flow.core.displaytype.Default -cell-rendering-customizer adams.gui.core.spreadsheettable.DefaultCellRenderingCustomizer -writer adams.data.io.output.NullWriter -preview adams.gui.core.spreadsheetpreview.NullPreview
 adams.flow.standalone.CallableActors
  adams.flow.control.SubProcess -name "peak indicator"
   adams.flow.transformer.SetVariable -var-name hour
   adams.flow.control.Switch -condition "adams.flow.condition.bool.HashSet -storage-name peak_hours -value @{hour} -conversion adams.data.conversion.StringToInt" -condition adams.flow.condition.bool.True
    adams.flow.transformer.SetVariable -name peak -var-name indicator -var-value yes
    adams.flow.transformer.SetVariable -name off-peak -var-name indicator -var-value no
   adams.flow.control.Injector -location INPLACE -injection @{indicator} -conversion adams.data.conversion.StringToString
  adams.flow.control.SubProcess -name "weekend indicator"
   adams.flow.transformer.SetVariable -var-name day
   adams.flow.control.Switch -condition "adams.flow.condition.bool.Expression -expression \"(\\\\\\\"@{day}\\\\\\\" = \\\\\\\"Sat\\\\\\\") or (\\\\\\\"@{day}\\\\\\\" = \\\\\\\"Sun\\\\\\\")\"" -condition adams.flow.condition.bool.True
    adams.flow.transformer.SetVariable -name weekend -var-name indicator -var-value yes
    adams.flow.transformer.SetVariable -name weekdays -var-name indicator -var-value no
   adams.flow.control.Injector -location INPLACE -injection @{indicator} -conversion adams.data.conversion.StringToString
  adams.flow.control.SubProcess -name "free weekend indicator"
   adams.flow.transformer.SetVariable -var-name hour
   adams.flow.control.Switch -condition "adams.flow.condition.bool.HashSet -storage-name free_weekend_hours -value @{hour} -conversion adams.data.conversion.StringToInt" -condition adams.flow.condition.bool.True
    adams.flow.transformer.SetVariable -name free -var-name indicator -var-value yes
    adams.flow.transformer.SetVariable -name "not free" -var-name indicator -var-value no
   adams.flow.control.Injector -location INPLACE -injection @{indicator} -conversion adams.data.conversion.StringToString
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.standalone.SetVariable -name "restore file" -var-name restore -var-value @{flow_filename_long}.props -value-type FILE_FORWARD_SLASHES -expand-value true
  adams.flow.source.EnterManyValues -name Parameters -stop-if-canceled true -value "adams.flow.source.valuedefinition.FileValueDefinition -name input_file -display \"Input CSV file\" -help \"the file with the hourly data\" -file-chooser-title \"Input CSV\" -extension csv -default-value ${HOME}/temp/electricity/hourly.csv" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name peak_range -display \"Peak range (hours)\" -help \"the range of hours that are considered peak\" -default-value 7-10,17-20" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name free_weekend_range -display \"Free weekend range (hours)\" -help \"the range of hours that are free on the weekend\" -default-value 9-16" -output-type MAP -restoration-enabled true -restoration-file @{restore}
  adams.flow.transformer.MapToVariables
  adams.flow.control.Trigger -name "peak hours"
   adams.flow.standalone.HashSetInit -storage-name peak_hours -conversion adams.data.conversion.StringToString
   adams.flow.source.IntegerRange -range @{peak_range} -max 24
   adams.flow.transformer.HashSetAdd -storage-name peak_hours -conversion adams.data.conversion.ObjectToObject
  adams.flow.control.Trigger -name "free weekend hours"
   adams.flow.standalone.HashSetInit -storage-name free_weekend_hours -conversion adams.data.conversion.StringToString
   adams.flow.source.IntegerRange -range @{free_weekend_range} -max 24
   adams.flow.transformer.HashSetAdd -storage-name free_weekend_hours -conversion adams.data.conversion.ObjectToObject
 adams.flow.control.Trigger -name process
  adams.flow.source.Variable -var-name input_file -conversion adams.data.conversion.StringToString
  adams.flow.transformer.SpreadSheetFileReader -reader "adams.data.io.input.CsvSpreadSheetReader -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet -datetime-columns 1 -datetime-format \"yyyy-MM-dd HH:mm\" -datetime-lenient true -parse-formulas false"
  adams.flow.transformer.SpreadSheetRemoveColumn -position cost,type
  adams.flow.control.SubProcess -name "split date/time column"
   adams.flow.transformer.Convert -conversion "adams.data.conversion.SpreadSheetSplitColumn -column 1 -expression \" \""
   adams.flow.transformer.SpreadSheetSetHeaderCell -name date -no-copy true -value date
   adams.flow.transformer.SpreadSheetSetHeaderCell -name time -no-copy true -col 2 -value time
  adams.flow.control.SubProcess -name "create hour column"
   adams.flow.transformer.SpreadSheetCopyColumns -columns 2 -position 2 -after true
   adams.flow.transformer.SpreadSheetSetHeaderCell -no-copy true -col 3 -value hour
   adams.flow.transformer.SpreadSheetConvertCells -no-copy true -finder "adams.data.spreadsheet.cellfinder.CellRange -columns 3" -conversion "adams.data.conversion.DateTimeTypeToString -datetime-type TIME -format H"
  adams.flow.control.SubProcess -name "create on/off-peak indicator"
   adams.flow.transformer.SpreadSheetCopyColumns -columns 3 -position 3 -after true
   adams.flow.transformer.SpreadSheetSetHeaderCell -no-copy true -col 4 -value peak
   adams.flow.transformer.SpreadSheetTransformCells -finder "adams.data.spreadsheet.cellfinder.CellRange -columns peak" -force-input-type true -input-type LONG -transformer "peak indicator"
  adams.flow.control.SubProcess -name "create weekday"
   adams.flow.transformer.SpreadSheetCopyColumns -columns 1 -position 4 -after true
   adams.flow.transformer.SpreadSheetSetHeaderCell -no-copy true -col 5 -value day
   adams.flow.transformer.SpreadSheetConvertCells -no-copy true -finder "adams.data.spreadsheet.cellfinder.CellRange -columns 5" -conversion "adams.data.conversion.DateTimeTypeToString -format E"
  adams.flow.control.SubProcess -name "create weekend indicator"
   adams.flow.transformer.SpreadSheetCopyColumns -columns 5 -position 5 -after true
   adams.flow.transformer.SpreadSheetSetHeaderCell -no-copy true -col 6 -value weekend
   adams.flow.transformer.SpreadSheetTransformCells -no-copy true -finder "adams.data.spreadsheet.cellfinder.CellRange -columns weekend" -force-input-type true -transformer "weekend indicator"
  adams.flow.control.SubProcess -name "create free weekend indicator"
   adams.flow.transformer.SpreadSheetCopyColumns -columns 3 -position 6 -after true
   adams.flow.transformer.SpreadSheetSetHeaderCell -no-copy true -col 7 -value free_weekend
   adams.flow.transformer.SpreadSheetTransformCells -no-copy true -finder "adams.data.spreadsheet.cellfinder.CellRange -columns free_weekend" -force-input-type true -input-type LONG -transformer "free weekend indicator"
  adams.flow.control.Tee -name "display full"
   adams.flow.sink.CallableSink -callable Full
  adams.flow.control.Tee -name "# days"
   adams.flow.transformer.SpreadSheetInfo -output-array true -type CELL_VALUES -column-index 1
   adams.flow.transformer.ArrayLength
   adams.flow.sink.CallableSink -callable "# days"
  adams.flow.control.Tee -name peak/off-peak
   adams.flow.transformer.SpreadSheetAggregate -key-columns peak -aggregate-columns usage_kwh
   adams.flow.transformer.Convert -conversion "adams.data.conversion.SpreadSheetAddFormulaRow -columns last"
   adams.flow.sink.CallableSink -callable Peak/Off-peak
  adams.flow.control.Tee -name "free weekend"
   adams.flow.control.Tee -name free
    adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.MultiRowFinder -finder \"adams.data.spreadsheet.rowfinder.ByValue -att-index weekend -reg-exp yes\" -finder \"adams.data.spreadsheet.rowfinder.ByValue -att-index free_weekend -reg-exp yes\" -combination INTERSECT"
    adams.flow.transformer.SpreadSheetAggregate -aggregate-columns usage_kwh
    adams.flow.transformer.SpreadSheetGetCell
    adams.flow.transformer.SetVariable -var-name free
   adams.flow.control.Tee -name "not free"
    adams.flow.transformer.SpreadSheetRowFilter -finder "adams.data.spreadsheet.rowfinder.Invert -row-finder \"adams.data.spreadsheet.rowfinder.MultiRowFinder -finder \\\"adams.data.spreadsheet.rowfinder.ByValue -att-index weekend -reg-exp yes\\\" -finder \\\"adams.data.spreadsheet.rowfinder.ByValue -att-index free_weekend -reg-exp yes\\\" -combination INTERSECT\""
    adams.flow.transformer.SpreadSheetAggregate -aggregate-columns usage_kwh
    adams.flow.transformer.SpreadSheetGetCell
    adams.flow.transformer.SetVariable -var-name not_free
   adams.flow.control.Trigger -name output
    adams.flow.source.CombineVariables -expression "free weekend,rest of week\\n@{free},@{not_free}" -conversion "adams.data.conversion.StringToSpreadSheet -reader \"adams.data.io.input.CsvSpreadSheetReader -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet\""
    adams.flow.sink.CallableSink -callable "free weekend"